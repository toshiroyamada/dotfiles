#!/usr/bin/env python
import sys
import pyudev


def print_device(device, depth=0):
    if depth:
        spaces = '    ' * depth
    else:
        spaces = ''

    print '%s==> %s' % (spaces, device.device_path)
    for key, value in device.iteritems():
        print '%sE: %s=="%s"' % (spaces, key, value)
    for key, value in device.attributes.iteritems():
        if key != 'uevent':
            print '%sATTR{%s}=="%s"' % (spaces, key, value)
    print

def print_children(device, depth=1):
    for child in device.children:
        print_device(child, depth)

        print_children(child, depth+1)

def print_tree(path):
    context = pyudev.Context()
    try:
        device = pyudev.Device.from_path(context, path)
    except pyudev.device.DeviceNotFoundAtPathError:
        device = pyudev.Device.from_device_file(context, path)

    print_device(device)
    print_children(device)

if __name__ == '__main__':
    if len(sys.argv) <= 1:
        print "Not enough arguments"
        sys.exit(1)

    for path in sys.argv[1:]:
        print_tree(path)
